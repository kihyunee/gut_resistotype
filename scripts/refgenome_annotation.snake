import glob

Dict_DB={"COG":{"database_path":"/mnt/gpfs/kihyunee/project/DB_files/COG/prot2003-2014.gi.fa","evalue":1e-7},"CARD":{"database_path":"/mnt/gpfs/kihyunee/project/DB_files/CARD_Oct_2017/protein_fasta_protein_homolog_model.refined.legit.fasta","evalue":1e-20}}
EXTENSION={"COG":".COG.blastp.cog.scg","CARD":".CARD.blastp.i80d80.assign"}

GFASTAS=[gfa.rstrip() for gfa in open("/mnt/gpfs/nicola/ncbi_refseq_genomes/copy_20190419/test900.genomicFa.list")]
LIST_ACCS_GFASTAS=[[gfasta.split("/")[-1].split('.fasta')[0],gfasta] for gfasta in GFASTAS]
LIST_ACCS_PREFIXS=[[gfasta.split("/")[-1].split('.fasta')[0],gfasta.split("/")[1]] for gfasta in GFASTAS]

LIST_RESULTS=["ORF_blastp_"+db+"_processed/"+accprefix+"/"+acc+EXTENSION[db] for acc,accprefix in LIST_ACCS_PREFIXS for db in ["COG","CARD"]]


rule all :
	input: LIST_RESULTS

rule prodigal:
	input :
		fasta="genomic_fasta/{Accprefix}/{Acc}.fasta"
	output:
		gff="ORF_gff/{Accprefix}/{Acc}.gff",
		faa="ORF_faa/{Accprefix}/{Acc}.faa",
		fna="ORF_fna/{Accprefix}/{Acc}.fna",
	shell : 
		"prodigal -p meta -q -f gff -i {input.fasta} -o {output.gff} -a {output.faa} -d {output.fna}"
	

rule diamond:
	input :
		"ORF_faa/{Accprefix}/{Acc}.faa"
	output:
		"ORF_blastp_{DB}/{Accprefix}/{Acc}.{DB}.blastp"
	params:
		db=lambda w:Dict_DB[w.DB]["database_path"],
		evalue=lambda w:Dict_DB[w.DB]["evalue"]
	threads:
		1
	shell :
		"diamond blastp -d {params.db} -p {threads} -e {params.evalue} -k 1 -q {input} -o {output}"

rule Filter_and_rename_CARD:
	input:
		blastp="ORF_blastp_CARD/{Accprefix}/{Acc}.CARD.blastp"
	output: 
		id80="ORF_blastp_CARD_processed/{Accprefix}/{Acc}.CARD.blastp.i80d80",
		acctmp="ORF_blastp_CARD_processed/{Accprefix}/{Acc}.CARD.blastp.i80d80.acctmp",
		assign="ORF_blastp_CARD_processed/{Accprefix}/{Acc}.CARD.blastp.i80d80.assign"
	params:
		db=lambda w:Dict_DB["CARD"]["database_path"],
		assign="/mnt/gpfs/kihyunee/project/DB_files/CARD_Oct_2017/protein_fasta_protein_homolog_model.refined.accession_2_ARG_cluster_assign.tab"
	shell: """
	java -cp /mnt/gpfs/kihyunee/install/javaclass BlastResultFilterLkh -in {input.blastp} -idcut 80 -dfasta {params.db} -dcovCut 80 -out {output.id80} 
	java -cp /mnt/gpfs/kihyunee/install/javaclass TableColumnReformatVerticalSepField -in {output.id80} -col 2 -field 2 -header F -out {output.acctmp}
	java -cp /mnt/gpfs/kihyunee/install/javaclass TableTranslateColumnByDictionaryLkh -i {output.acctmp} -icol 2 -iheader F -d {params.assign} -dheader T -q 1 -t 2 -o {output.assign}
	"""

rule Filter_and_rename_COG:
	input:
		blastp="ORF_blastp_COG/{Accprefix}/{Acc}.COG.blastp"
	output: 
		cog="ORF_blastp_COG_processed/{Accprefix}/{Acc}.COG.blastp.cog",
		SCG="ORF_blastp_COG_processed/{Accprefix}/{Acc}.COG.blastp.cog.scg"
	params:
		gi_to_cog="/mnt/gpfs/kihyunee/project/DB_files/COG/gi_to_cog.tab",
		SCG="/mnt/gpfs/kihyunee/project/DB_files/COG/list_speci_universal_single_copy_genes.cogs"
	shell: """
	java -cp /mnt/gpfs/kihyunee/install/javaclass TableTranslateColumnByDictionaryLkh -i {input.blastp} -icol 2 -iheader F -d {params.gi_to_cog} -dheader F -q 1 -t 2 -o {output.cog}
	java -cp /mnt/gpfs/kihyunee/install/javaclass TableFilteringRowsLkh -tbl {output.cog} -sep t -headerRow F -col 2 -targetList {params.SCG} -out {output.SCG}
	"""

